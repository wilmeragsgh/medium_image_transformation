getwd()
setwd('..')
getwd()
getwd()
getwd()
?readBin
hedr$g <- 3
readBin('test/aulamagna2.bmp',what = integer(),n = 10)
readBin('test/aulamagna2.bmp',what = integer(),n = 15)
readBin('test/aulamagna2.bmp',what = integer(),size = 2)
f <- file('test/aulamagna2.bmp','rb')
readBin(f,what = integer(),size = 2)
readBin(f,what = integer(),size = 4)
shiny::runApp('src')
l<- c()
l$s <- 1
runApp('src')
runApp('src')
runApp('src')
files()
?reactive
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
?imageOutput
runApp('src')
runApp('src')
renderTable()
?renderTable
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
?as.table
renderTable
?renderTable
l
table(l)
l$k <- 0
l
table(l0
)
table(l)
as.table(l)
as.data.frame(l)
runApp('src')
runApp('src')
runApp('src')
getwd()
runApp('src')
url('www/texturebg.png')
runApp('src')
file('www/texturebg.png')
?url
runApp('src')
getwd()
?h1
file('www/texturebg.png')
runApp('src')
runApp('src')
getwd('')
getwd()
url()
url('')
url('.')
url('www/texturebg.png')
file('www/texturebg.png')
runApp('src')
url("www/texturebg.png")
?url
runApp('src')
getwd()
dir()
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
shiny::runApp('src')
library('shiny')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
?wellPanel
runApp('src')
runApp('src')
runApp('src')
fileInput
?fileInput
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
?uiOutput
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
?wellPanel
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
tableOutput
?tableOutput
?fluidRow
?column
runApp('src')
?tableOutput
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
?fluidRow
runApp('src')
runApp('src')
?tableOutput
runApp('src')
runApp('src')
runApp('src')
runApp('src')
?HTML
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
install.packages('imager')
install.packages('imager')
install.packages('imager')
runApp('src')
?renderImage
image([1,1,0;0,0,1])
image(c(1,1,0;0,0,1))
image(c(c(1,1,0)c(0,0,1)))
image()
image(matrix(data = 1:9,nrow = 3))
?shiny::actionButton
?lapply
mapply(rep,1:4,1:4)
mapply(function(s) s+1,matrix(data = 1:9,nrow = 3))
matrix(data = 1:9,nrow = 3)
matrix(data = 1:9,nrow = 3,byrow = T)
matrix(mapply(function(s) s+1,matrix(data = 1:9,nrow = 3)),nrow = 3,byrow = T)
matrix(mapply(function(s) s+1,matrix(data = 1:9,nrow = 3)),nrow = 3)
matrix(data = 1:9,nrow = 3)
matrix(mapply(function(s) s+1,matrix(data = 1:9,nrow = 3)),nrow = 3)
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
library('bmp')
lapply(1:2,function(i){})
lapply(1:2,function(i){imagename = paste0('i',i) \
lapply(1:2,function(i){imagename = paste0('i',i)
})
list('i1')
imageOutput('image1')
shiny::imageOutput('image1')
lapply(1:2,function(i){imagename = paste0('i',i)
shiny::imageOutput(imagename)
})
shiny::tagList(list(shiny::imageOutput('im1')))
shiny::runApp('src')
runApp('src')
runApp('src')
shiny::runApp('src')
parallel::detectCores()
workerfun <- function(x) return(as.numeric(tail(rev(intToBits(int)),n = 8)))
lapply(1:5,workerfun)
workerfun <- function(x) return(as.numeric(tail(rev(intToBits(x)),n = 8)))
lapply(1:5,workerfun)
sapply(1:5,workerfun)
t(sapply(1:5,workerfun))
?lapply
as.vector(t(sapply(1:5,workerfun)))
as.vector(sapply(1:5,workerfun))
nWorkers <- parallel::detectCores()
parallel::mclapply(1:5,workerfun,mc.cores = nWorkers)
unlist(parallel::mclapply(1:5,workerfun,mc.cores = nWorkers))
as.vector(sapply(1:5,workerfun))
shiny::runApp('src')
runApp('src')
?image
1:10[-2,3]
1:10[c(-2,3)]
1:10[-2]
1:10[]
1:10[1]
a <- 1:10
a[-2]
a[c(-2,-3)]
lapply(1:(1255*1600))
(1:(1255*1600))
m <- matrix(1:20,ncol=5)
m
m[,-5]
matrix(1:20,ncol=5)[,-5]
2009255/1255
pico(m)
plot(m)
image(m)
image(m,width= 20,height=20,units = 'px')
warnings()
image(m,pin = c(20,20))
image(m,pin = c(30,30))
image(m,pin = c(50,50))
image(m,pin = c(150,150))
runApp('src')
getwd
getwd()
?system
system('ls')
print(x <- 1)
shiny::runApp('src')
system('R CMD SHLIB trial.cpp')
system('export PKG_CXXFLAGS=`Rscript -e "Rcpp:::CxxFlags()"`')
system('export PKG_LIBS=`Rscript -e "Rcpp:::LdFlags()"`')
system('R CMD SHLIB trial.cpp')
runApp('src')
runApp('src')
runApp('src')
runApp('src')
shiny::runApp()
getwd()
runApp()
?withProgress
runApp()
shiny::runApp()
